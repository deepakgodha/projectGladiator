package twowaytrip;

import java.io.FileInputStream;
import java.util.Properties;

import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebElement;
import org.testng.Assert;
import org.testng.annotations.Test;

import onewaytrip.Base;
import onewaytrip.OneWayTrip;

public class Runner extends Base{
	Properties prop=new Properties();
  @Test(enabled=false,description="Two way flight booked for 1 person")
  public void bookingTwoWayFlight()throws Exception {
	  prop.load(new FileInputStream("oneway.property"));
	  OneWayTrip book=new OneWayTrip(driver);
	  book.getUrl(prop.getProperty("url"));
	  book.doClick("xpath",prop.getProperty("twoway"));
	  book.clearData("xpath",prop.getProperty("fromCity"));
	  Thread.sleep(3000);
	  WebElement fp1= book.getElement("xpath",prop.getProperty("fromCity"));
	  fp1.sendKeys(prop.getProperty("place1"));
	  fp1.sendKeys(Keys.ARROW_DOWN);
	  Thread.sleep(2000);
	  fp1.sendKeys(Keys.ENTER);
	  book.clearData("xpath",prop.getProperty("toCity"));
	  WebElement fp=book.getElement("xpath",prop.getProperty("toCity"));
	  fp.sendKeys(prop.getProperty("place2"));
      Thread.sleep(2000);
      fp.sendKeys(Keys.ARROW_DOWN);
      Thread.sleep(2000);
      fp.sendKeys(Keys.ENTER);
	 book.doClick("id","ddate");
	  book.doClick("id",prop.getProperty("date"));
	  book.doClick("id","rdate");
	  book.doClick("id", prop.getProperty("rdate"));
	  book.doClick("css","span.optclass-name");
	  book.doClick("xpath",prop.getProperty("businessClass"));
	  book.doClick("css",prop.getProperty("search"));
	  Thread.sleep(2000);
	  book.doClick("xpath", "//label[@for='out1']");
	  book.doClick("xpath", "//label[@for='in2']");
	  book.doClick("xpath",prop.getProperty("bookNow2"));
	  Thread.sleep(2000);
	  book.doClick("css", "a[ng-click='SelectedFlight_LRT(bookNow)']");
	  Thread.sleep(2000);
	  book.doClick("xpath", prop.getProperty("insurance"));
	  book.clearData("id", "txtEmailId");
	  book.sendData("id","txtEmailId",prop.getProperty("emailid"));
	  book.doClick("id", "spnVerifyEmail");
	  Thread.sleep(2000);
	  book.selectDropDown("id","titleAdult0",prop.getProperty("title"));
	  book.clearData("id","txtFNAdult0");
	  book.sendData("id","txtFNAdult0", prop.getProperty("fname"));
	  book.clearData("id","txtLNAdult0");
	  book.sendData("id","txtLNAdult0", prop.getProperty("lname"));
	  //book.doClick("xpath", "//label[@id='mycheckbox']//span[@class='cmark_cbox']");
	  book.sendData("id","txtCPhone", prop.getProperty("phnumber"));
	  book.doClick("id", "spnTransaction");
	  Thread.sleep(2000);
	 String url= driver.getCurrentUrl();
	 Assert.assertEquals(true,url.contains("https://flight.easemytrip.com/Review/CheckOut"));

	  
  }
  @Test(enabled=false,description="Two way flight booked for 3 person")
  public void bookingFor3Person()throws Exception {
	  prop.load(new FileInputStream("oneway.property"));
	  OneWayTrip book=new OneWayTrip(driver);
	  book.getUrl(prop.getProperty("url"));
	  book.doClick("xpath",prop.getProperty("twoway"));
	  book.clearData("xpath",prop.getProperty("fromCity"));
	  Thread.sleep(3000);
	  WebElement fp1= book.getElement("xpath",prop.getProperty("fromCity"));
	  fp1.sendKeys(prop.getProperty("place1"));
	  fp1.sendKeys(Keys.ARROW_DOWN);
	  Thread.sleep(2000);
	  fp1.sendKeys(Keys.ENTER);
	  book.clearData("xpath",prop.getProperty("toCity"));
	  WebElement fp=book.getElement("xpath",prop.getProperty("toCity"));
	  fp.sendKeys(prop.getProperty("place2"));
      Thread.sleep(2000);
      fp.sendKeys(Keys.ARROW_DOWN);
      Thread.sleep(2000);
      fp.sendKeys(Keys.ENTER);
	 book.doClick("id","ddate");
	  book.doClick("id",prop.getProperty("date"));
	  book.doClick("id","rdate");
	  book.doClick("id", prop.getProperty("rdate"));
	  book.doClick("css",prop.getProperty("traveller"));
	  book.doClick("xpath", prop.getProperty("addAdult"));
	  book.doClick("xpath", prop.getProperty("addChild"));
	  book.doClick("css","span.optclass-name");
	  book.doClick("xpath",prop.getProperty("businessClass"));
	  book.doClick("css",prop.getProperty("search"));
	  Thread.sleep(2000);
	  book.doClick("xpath", "//label[@for='out1']");
	  book.doClick("xpath", "//label[@for='in2']");
	  book.doClick("xpath",prop.getProperty("bookNow2"));
	  Thread.sleep(2000);
	  book.doClick("css", "a[ng-click='SelectedFlight_LRT(bookNow)']");
	  book.doClick("xpath", prop.getProperty("insurance"));
	  Thread.sleep(2000);
	  book.clearData("id", "txtEmailId");
	  book.sendData("id","txtEmailId",prop.getProperty("emailid"));
	  book.doClick("id", "spnVerifyEmail");
	  Thread.sleep(2000);
	 // book.doClick("id","dwnArrAdult0");
	  Thread.sleep(2000);
	  book.selectDropDown("id","titleAdult0",prop.getProperty("title"));
	  book.clearData("id","txtFNAdult0");
	  book.sendData("id","txtFNAdult0", prop.getProperty("fname"));
	  book.clearData("id","txtLNAdult0");
	  book.sendData("id","txtLNAdult0", prop.getProperty("lname"));
	 // book.doClick("xpath", "//label[@id='mycheckbox']//span[@class='cmark_cbox']");
	  book.doClick("css", "a[class='add_adlt']");
	  book.selectDropDown("id","titleAdult1",prop.getProperty("title1"));
	  book.clearData("id","txtFNAdult1");
	  book.sendData("id","txtFNAdult1", prop.getProperty("fname1"));
	  book.clearData("id","txtLNAdult1");
	  book.sendData("id","txtLNAdult1", prop.getProperty("lname1"));
	  book.selectDropDown("id","titleChild0",prop.getProperty("title2"));
	  book.clearData("id","txtFNChild0");
	  book.sendData("id","txtFNChild0", prop.getProperty("fname2"));
	  book.clearData("id","txtLNChild0");
	  book.sendData("id","txtLNChild0", prop.getProperty("lname2"));
	  book.sendData("id","txtCPhone", prop.getProperty("phnumber"));
	  book.doClick("id", "spnTransaction");
	  Thread.sleep(2000);
	 String url= driver.getCurrentUrl();
	 Assert.assertEquals(true,url.contains("https://flight.easemytrip.com/Review/CheckOut"));

	 }
  @Test(enabled=false,description="clicked on search successfully")
  public void testCase3()throws Exception {
	  prop.load(new FileInputStream("oneway.property"));
	  OneWayTrip book=new OneWayTrip(driver);
	  book.getUrl(prop.getProperty("url"));
	  //book.doClick("xpath",prop.getProperty("twoway"));
	  book.clearData("xpath",prop.getProperty("fromCity"));
	  Thread.sleep(3000);
	  WebElement fp1= book.getElement("xpath",prop.getProperty("fromCity"));
	  fp1.sendKeys(prop.getProperty("place1"));
	  fp1.sendKeys(Keys.ARROW_DOWN);
	  Thread.sleep(2000);
	  fp1.sendKeys(Keys.ENTER);
	  book.clearData("xpath",prop.getProperty("toCity"));
	  WebElement fp=book.getElement("xpath",prop.getProperty("toCity"));
	  fp.sendKeys(prop.getProperty("place2"));
      Thread.sleep(2000);
      fp.sendKeys(Keys.ARROW_DOWN);
      Thread.sleep(2000);
      fp.sendKeys(Keys.ENTER);
	 book.doClick("id","ddate");
	  book.doClick("id",prop.getProperty("date"));
	  book.doClick("id","rdate");
	  book.doClick("id", prop.getProperty("rdate"));
	  book.doClick("css","span.optclass-name");
	  book.doClick("xpath",prop.getProperty("businessClass"));
	  book.doClick("css",prop.getProperty("search"));
	  Thread.sleep(2000);
	  String s=driver.getCurrentUrl();
	  Assert.assertEquals(true,s.contains("https://flight.easemytrip.com/FlightListRT/Index"));
  }
  @Test(enabled=false,description="Time overlap")
  public void timeOverlap()throws Exception {
	  prop.load(new FileInputStream("oneway.property"));
	  OneWayTrip book=new OneWayTrip(driver);
	  book.getUrl(prop.getProperty("url"));
	  //book.doClick("xpath",prop.getProperty("twoway"));
	  book.clearData("xpath",prop.getProperty("fromCity"));
	  Thread.sleep(3000);
	  WebElement fp1= book.getElement("xpath",prop.getProperty("fromCity"));
	  fp1.sendKeys(prop.getProperty("place1"));
	  fp1.sendKeys(Keys.ARROW_DOWN);
	  Thread.sleep(2000);
	  fp1.sendKeys(Keys.ENTER);
	  book.clearData("xpath",prop.getProperty("toCity"));
	  WebElement fp=book.getElement("xpath",prop.getProperty("toCity"));
	  fp.sendKeys(prop.getProperty("place2"));
      Thread.sleep(2000);
      fp.sendKeys(Keys.ARROW_DOWN);
      Thread.sleep(2000);
      fp.sendKeys(Keys.ENTER);
	 book.doClick("id","ddate");
	  book.doClick("id",prop.getProperty("date"));
	  book.doClick("id","rdate");
	  book.doClick("id", prop.getProperty("date"));
	  book.doClick("css","span.optclass-name");
	  book.doClick("xpath",prop.getProperty("businessClass"));
	  book.doClick("css",prop.getProperty("search"));
	  Thread.sleep(2000);
	  book.doClick("xpath", "//label[@for='out0']");
	  Alert ac=driver.switchTo().alert();
	  String error=ac.getText();
	  ac.accept();
	  Thread.sleep(2000);
	  ac.accept();
	  Assert.assertEquals("Hey, these flights timing is overlap, please change the selection.", error);
	  Thread.sleep(2000);
  }
  @Test(enabled=false,description="Source and destination cant be same")
  public void sameToAndFromLocation()throws Exception {
	  prop.load(new FileInputStream("oneway.property"));
	  OneWayTrip book=new OneWayTrip(driver);
	  book.getUrl(prop.getProperty("url"));
	  //book.doClick("xpath",prop.getProperty("twoway"));
	  book.clearData("xpath",prop.getProperty("fromCity"));
	  Thread.sleep(3000);
	  WebElement fp1= book.getElement("xpath",prop.getProperty("fromCity"));
	  fp1.sendKeys(prop.getProperty("place1"));
	  fp1.sendKeys(Keys.ARROW_DOWN);
	  Thread.sleep(2000);
	  fp1.sendKeys(Keys.ENTER);
	  book.clearData("xpath",prop.getProperty("toCity"));
	  WebElement fp=book.getElement("xpath",prop.getProperty("toCity"));
	  fp.sendKeys(prop.getProperty("place1"));
      Thread.sleep(2000);
      fp.sendKeys(Keys.ARROW_DOWN);
      Thread.sleep(2000);
      fp.sendKeys(Keys.ENTER);
	  book.doClick("css",prop.getProperty("search"));
	  Thread.sleep(2000);
	  Alert ac=driver.switchTo().alert();
	  String error=ac.getText();
	  ac.accept();
	  Assert.assertEquals("Source and Destination cannot be same", error);
  }
  @Test(enabled=false,description="enter a valid mail id")
  public void enterValidMailId()throws Exception {
	  prop.load(new FileInputStream("oneway.property"));
	  OneWayTrip book=new OneWayTrip(driver);
	  book.getUrl(prop.getProperty("url"));
	  //book.doClick("xpath",prop.getProperty("twoway"));
	  book.clearData("xpath",prop.getProperty("fromCity"));
	  Thread.sleep(3000);
	  WebElement fp1= book.getElement("xpath",prop.getProperty("fromCity"));
	  fp1.sendKeys(prop.getProperty("place1"));
	  fp1.sendKeys(Keys.ARROW_DOWN);
	  Thread.sleep(2000);
	  fp1.sendKeys(Keys.ENTER);
	  book.clearData("xpath",prop.getProperty("toCity"));
	  WebElement fp=book.getElement("xpath",prop.getProperty("toCity"));
	  fp.sendKeys(prop.getProperty("place2"));
      Thread.sleep(2000);
      fp.sendKeys(Keys.ARROW_DOWN);
      Thread.sleep(2000);
      fp.sendKeys(Keys.ENTER);
	 book.doClick("id","ddate");
	  book.doClick("id",prop.getProperty("date"));
	  book.doClick("id","rdate");
	  book.doClick("id", prop.getProperty("rdate"));
	  book.doClick("css","span.optclass-name");
	  book.doClick("xpath",prop.getProperty("businessClass"));
	  book.doClick("css",prop.getProperty("search"));
	  Thread.sleep(2000);
	  book.doClick("xpath", "//label[@for='out1']");
	  book.doClick("xpath", "//label[@for='in2']");
	  book.doClick("xpath",prop.getProperty("bookNow2"));
	  Thread.sleep(2000);
	  book.doClick("css", "a[ng-click='SelectedFlight_LRT(bookNow)']");
	  book.doClick("xpath", prop.getProperty("insurance"));
	  Thread.sleep(2000);
	  book.clearData("id", "txtEmailId");
	  book.sendData("id","txtEmailId",prop.getProperty("invalidemail"));
	  Thread.sleep(1000);
	  book.doClick("xpath", "//div[@class='cancl']");
	  book.doClick("xpath", "//span[@id='spnRdoEMTNCF']");
	  Thread.sleep(2000);
	  book.doClick("id", "spnVerifyEmail");
	  Thread.sleep(2000);
	  String error=driver.findElement(By.xpath("//span[normalize-space()='Please enter a valid email Id']")).getText();
	  Assert.assertEquals("Please enter a valid email Id", error);
  }
  @Test(enabled=false,description="enter a valid coupon")
  public void enterValidCoupon()throws Exception {
	  prop.load(new FileInputStream("oneway.property"));
	  OneWayTrip book=new OneWayTrip(driver);
	  book.getUrl(prop.getProperty("url"));
	  //book.doClick("xpath",prop.getProperty("twoway"));
	  book.clearData("xpath",prop.getProperty("fromCity"));
	  Thread.sleep(3000);
	  WebElement fp1= book.getElement("xpath",prop.getProperty("fromCity"));
	  fp1.sendKeys(prop.getProperty("place1"));
	  fp1.sendKeys(Keys.ARROW_DOWN);
	  Thread.sleep(2000);
	  fp1.sendKeys(Keys.ENTER);
	  book.clearData("xpath",prop.getProperty("toCity"));
	  WebElement fp=book.getElement("xpath",prop.getProperty("toCity"));
	  fp.sendKeys(prop.getProperty("place2"));
      Thread.sleep(2000);
      fp.sendKeys(Keys.ARROW_DOWN);
      Thread.sleep(2000);
      fp.sendKeys(Keys.ENTER);
	 book.doClick("id","ddate");
	  book.doClick("id",prop.getProperty("date"));
	  book.doClick("id","rdate");
	  book.doClick("id", prop.getProperty("rdate"));
	  book.doClick("css","span.optclass-name");
	  book.doClick("xpath",prop.getProperty("businessClass"));
	  book.doClick("css",prop.getProperty("search"));
	  Thread.sleep(2000);
	  book.doClick("xpath", "//label[@for='out1']");
	  book.doClick("xpath", "//label[@for='in2']");
	  book.doClick("xpath",prop.getProperty("bookNow2"));
	  Thread.sleep(2000);
	  book.doClick("css", "a[ng-click='SelectedFlight_LRT(bookNow)']");
	  book.doClick("xpath", prop.getProperty("insurance"));
	  Thread.sleep(2000);
	  book.clearData("id", "txtEmailId");
	  book.sendData("id","txtEmailId",prop.getProperty("emailid"));
	  Thread.sleep(1000);
	  book.doClick("xpath", "//div[@class='cancl']");
	  book.sendData("xpath", "//input[@id='txtCouponCode']", "abc");
	  book.doClick("xpath", "//div[@class='apl']");
	  Thread.sleep(2000);
	  String msg=driver.findElement(By.cssSelector("p#easeFareDetails1_promodiv")).getText();
	  Assert.assertEquals(true,msg.contains("Invalid"));
  }
  @Test(enabled=false,description="select yes or no for insurance")
  public void selectInsurance()throws Exception {
	  prop.load(new FileInputStream("oneway.property"));
	  OneWayTrip book=new OneWayTrip(driver);
	  book.getUrl(prop.getProperty("url"));
	//  book.doClick("xpath",prop.getProperty("twoway"));
	  book.clearData("xpath",prop.getProperty("fromCity"));
	  Thread.sleep(3000);
	  WebElement fp1= book.getElement("xpath",prop.getProperty("fromCity"));
	  fp1.sendKeys(prop.getProperty("place1"));
	  fp1.sendKeys(Keys.ARROW_DOWN);
	  Thread.sleep(2000);
	  fp1.sendKeys(Keys.ENTER);
	  book.clearData("xpath",prop.getProperty("toCity"));
	  WebElement fp=book.getElement("xpath",prop.getProperty("toCity"));
	  fp.sendKeys(prop.getProperty("place2"));
      Thread.sleep(2000);
      fp.sendKeys(Keys.ARROW_DOWN);
      Thread.sleep(2000);
      fp.sendKeys(Keys.ENTER);
	 book.doClick("id","ddate");
	  book.doClick("id",prop.getProperty("date"));
	  book.doClick("id","rdate");
	  book.doClick("id", prop.getProperty("rdate"));
	  book.doClick("css","span.optclass-name");
	  book.doClick("xpath",prop.getProperty("businessClass"));
	  book.doClick("css",prop.getProperty("search"));
	  Thread.sleep(2000);
	  book.doClick("xpath", "//label[@for='out1']");
	  book.doClick("xpath", "//label[@for='in2']");
	  book.doClick("xpath",prop.getProperty("bookNow2"));
	  Thread.sleep(2000);
	  book.doClick("css", "a[ng-click='SelectedFlight_LRT(bookNow)']");
	 Thread.sleep(1000);
	 book.clearData("id", "txtEmailId");
	  book.sendData("id","txtEmailId",prop.getProperty("emailid"));
	  Thread.sleep(1000);
	  book.doClick("xpath", "//div[@class='cancl']");
	  book.doClick("xpath", "//span[@id='spnRdoEMTNCF']");
	  Thread.sleep(2000);
	  book.doClick("id", "spnVerifyEmail");
	  Thread.sleep(2000);
	  String error=driver.findElement(By.id("DivInsuAlert")).getText();
	  Assert.assertEquals("NOTE: Please select Yes or No to continue.",error);
  }
  @Test(enabled=false,description="enter the title in passengers details")
  public void enterTheTitle()throws Exception {
	  prop.load(new FileInputStream("oneway.property"));
	  OneWayTrip book=new OneWayTrip(driver);
	  book.getUrl(prop.getProperty("url"));
	  //book.doClick("xpath",prop.getProperty("twoway"));
	  book.clearData("xpath",prop.getProperty("fromCity"));
	  Thread.sleep(3000);
	  WebElement fp1= book.getElement("xpath",prop.getProperty("fromCity"));
	  fp1.sendKeys(prop.getProperty("place1"));
	  fp1.sendKeys(Keys.ARROW_DOWN);
	  Thread.sleep(2000);
	  fp1.sendKeys(Keys.ENTER);
	  book.clearData("xpath",prop.getProperty("toCity"));
	  WebElement fp=book.getElement("xpath",prop.getProperty("toCity"));
	  fp.sendKeys(prop.getProperty("place2"));
      Thread.sleep(2000);
      fp.sendKeys(Keys.ARROW_DOWN);
      Thread.sleep(2000);
      fp.sendKeys(Keys.ENTER);
	 book.doClick("id","ddate");
	  book.doClick("id",prop.getProperty("date"));
	  book.doClick("id","rdate");
	  book.doClick("id", prop.getProperty("rdate"));
	  book.doClick("css","span.optclass-name");
	  book.doClick("xpath",prop.getProperty("businessClass"));
	  book.doClick("css",prop.getProperty("search"));
	  Thread.sleep(2000);
	  book.doClick("xpath", "//label[@for='out1']");
	  book.doClick("xpath", "//label[@for='in2']");
	  book.doClick("xpath",prop.getProperty("bookNow2"));
	  Thread.sleep(2000);
	  book.doClick("css", "a[ng-click='SelectedFlight_LRT(bookNow)']");
	  Thread.sleep(2000);
	  book.doClick("xpath", prop.getProperty("insurance"));
	  book.clearData("id", "txtEmailId");
	  book.sendData("id","txtEmailId",prop.getProperty("emailid"));
	  book.doClick("id", "spnVerifyEmail");
	  Thread.sleep(2000);
	  book.doClick("id","dwnArrAdult0");
	  Thread.sleep(2000);
	  book.selectDropDown("id","titleAdult0",prop.getProperty("title0"));
	  book.clearData("id","txtFNAdult0");
	  book.sendData("id","txtFNAdult0", prop.getProperty("fname"));
	  book.clearData("id","txtLNAdult0");
	  book.sendData("id","txtLNAdult0", prop.getProperty("lname"));
	  book.doClick("xpath", "//label[@id='mycheckbox']//span[@class='cmark_cbox']");
	  book.sendData("id","txtCPhone", prop.getProperty("phnumber"));
	  book.doClick("id", "spnTransaction");
	  Thread.sleep(2000);
	  String error= driver.findElement(By.id("spanErrorAdult0")).getText();
		 Assert.assertEquals("Adult 1 title is required",error);

	  
  }
  @Test(enabled=false,description="enter first name of passenger")
  public void enterTheFirstName()throws Exception {
	  prop.load(new FileInputStream("oneway.property"));
	  OneWayTrip book=new OneWayTrip(driver);
	  book.getUrl(prop.getProperty("url"));
	  //book.doClick("xpath",prop.getProperty("twoway"));
	  book.clearData("xpath",prop.getProperty("fromCity"));
	  Thread.sleep(3000);
	  WebElement fp1= book.getElement("xpath",prop.getProperty("fromCity"));
	  fp1.sendKeys(prop.getProperty("place1"));
	  fp1.sendKeys(Keys.ARROW_DOWN);
	  Thread.sleep(2000);
	  fp1.sendKeys(Keys.ENTER);
	  book.clearData("xpath",prop.getProperty("toCity"));
	  WebElement fp=book.getElement("xpath",prop.getProperty("toCity"));
	  fp.sendKeys(prop.getProperty("place2"));
      Thread.sleep(2000);
      fp.sendKeys(Keys.ARROW_DOWN);
      Thread.sleep(2000);
      fp.sendKeys(Keys.ENTER);
	 book.doClick("id","ddate");
	  book.doClick("id",prop.getProperty("date"));
	  book.doClick("id","rdate");
	  book.doClick("id", prop.getProperty("rdate"));
	  book.doClick("css","span.optclass-name");
	  book.doClick("xpath",prop.getProperty("businessClass"));
	  book.doClick("css",prop.getProperty("search"));
	  Thread.sleep(2000);
	  book.doClick("xpath", "//label[@for='out1']");
	  book.doClick("xpath", "//label[@for='in2']");
	  book.doClick("xpath",prop.getProperty("bookNow2"));
	  Thread.sleep(2000);
	  book.doClick("css", "a[ng-click='SelectedFlight_LRT(bookNow)']");
	  Thread.sleep(2000);
	  book.doClick("xpath", prop.getProperty("insurance"));
	  book.clearData("id", "txtEmailId");
	  book.sendData("id","txtEmailId",prop.getProperty("emailid"));
	  book.doClick("id", "spnVerifyEmail");
	  Thread.sleep(2000);
	  book.doClick("id","dwnArrAdult0");
	  Thread.sleep(2000);
	  book.selectDropDown("id","titleAdult0",prop.getProperty("title"));
	  book.clearData("id","txtFNAdult0");
	  book.clearData("id","txtLNAdult0");
	  book.sendData("id","txtLNAdult0", prop.getProperty("lname"));
	  book.doClick("xpath", "//label[@id='mycheckbox']//span[@class='cmark_cbox']");
	  book.sendData("id","txtCPhone", prop.getProperty("phnumber"));
	  Thread.sleep(1000);
	  book.doClick("id", "spnTransaction");
	  Thread.sleep(2000);
	 String error= driver.findElement(By.id("spanErrorAdult0")).getText();
	 Assert.assertEquals("Adult 1 First Name should have minimum 1",error);

	  
  }
  @Test(enabled=false,description="Enter last name of passenger")
  public void enterTheLastName()throws Exception {
	  prop.load(new FileInputStream("oneway.property"));
	  OneWayTrip book=new OneWayTrip(driver);
	  book.getUrl(prop.getProperty("url"));
	  //book.doClick("xpath",prop.getProperty("twoway"));
	  book.clearData("xpath",prop.getProperty("fromCity"));
	  Thread.sleep(3000);
	  WebElement fp1= book.getElement("xpath",prop.getProperty("fromCity"));
	  fp1.sendKeys(prop.getProperty("place1"));
	  fp1.sendKeys(Keys.ARROW_DOWN);
	  Thread.sleep(2000);
	  fp1.sendKeys(Keys.ENTER);
	  book.clearData("xpath",prop.getProperty("toCity"));
	  WebElement fp=book.getElement("xpath",prop.getProperty("toCity"));
	  fp.sendKeys(prop.getProperty("place2"));
      Thread.sleep(2000);
      fp.sendKeys(Keys.ARROW_DOWN);
      Thread.sleep(2000);
      fp.sendKeys(Keys.ENTER);
	 book.doClick("id","ddate");
	  book.doClick("id",prop.getProperty("date"));
	  book.doClick("id","rdate");
	  book.doClick("id", prop.getProperty("rdate"));
	  book.doClick("css","span.optclass-name");
	  book.doClick("xpath",prop.getProperty("businessClass"));
	  book.doClick("css",prop.getProperty("search"));
	  Thread.sleep(2000);
	  book.doClick("xpath", "//label[@for='out1']");
	  book.doClick("xpath", "//label[@for='in2']");
	  book.doClick("xpath",prop.getProperty("bookNow2"));
	  Thread.sleep(2000);
	  book.doClick("css", "a[ng-click='SelectedFlight_LRT(bookNow)']");
	  Thread.sleep(2000);
	  book.doClick("xpath", prop.getProperty("insurance"));
	  book.clearData("id", "txtEmailId");
	  book.sendData("id","txtEmailId",prop.getProperty("emailid"));
	  book.doClick("id", "spnVerifyEmail");
	  Thread.sleep(2000);
	  book.doClick("id","dwnArrAdult0");
	  Thread.sleep(2000);
	  book.selectDropDown("id","titleAdult0",prop.getProperty("title"));
	  book.clearData("id","txtFNAdult0");
	  book.sendData("id","txtFNAdult0", prop.getProperty("fname"));
	  book.clearData("id","txtLNAdult0");
	  book.doClick("xpath", "//label[@id='mycheckbox']//span[@class='cmark_cbox']");
	  book.sendData("id","txtCPhone", prop.getProperty("phnumber"));
	  book.doClick("id", "spnTransaction");
	  Thread.sleep(2000);
	  String error= driver.findElement(By.id("spanErrorAdult0")).getText();
		 Assert.assertEquals("Adult 1 Last Name should have minimum 1character.",error);

	  
  }
  @Test(enabled=true,description="enter the phone number")
  public void enterThePhoneNumber()throws Exception {
	  prop.load(new FileInputStream("oneway.property"));
	  OneWayTrip book=new OneWayTrip(driver);
	  book.getUrl(prop.getProperty("url"));
	  //book.doClick("xpath",prop.getProperty("twoway"));
	  book.clearData("xpath",prop.getProperty("fromCity"));
	  Thread.sleep(3000);
	  WebElement fp1= book.getElement("xpath",prop.getProperty("fromCity"));
	  fp1.sendKeys(prop.getProperty("place1"));
	  fp1.sendKeys(Keys.ARROW_DOWN);
	  Thread.sleep(2000);
	  fp1.sendKeys(Keys.ENTER);
	  book.clearData("xpath",prop.getProperty("toCity"));
	  WebElement fp=book.getElement("xpath",prop.getProperty("toCity"));
	  fp.sendKeys(prop.getProperty("place2"));
      Thread.sleep(2000);
      fp.sendKeys(Keys.ARROW_DOWN);
      Thread.sleep(2000);
      fp.sendKeys(Keys.ENTER);
	  book.doClick("id","ddate");
	  book.doClick("id",prop.getProperty("date"));
	  book.doClick("id","rdate");
	  book.doClick("id", prop.getProperty("rdate"));
	  book.doClick("css","span.optclass-name");
	  book.doClick("xpath",prop.getProperty("businessClass"));
	  book.doClick("css",prop.getProperty("search"));
	  Thread.sleep(2000);
	  book.doClick("xpath", "//label[@for='out1']");
	  book.doClick("xpath", "//label[@for='in2']");
	  book.doClick("xpath",prop.getProperty("bookNow2"));
	  Thread.sleep(2000);
	  book.doClick("css", "a[ng-click='SelectedFlight_LRT(bookNow)']");
	  Thread.sleep(2000);
	  book.doClick("xpath", prop.getProperty("insurance"));
	  book.clearData("id", "txtEmailId");
	  book.sendData("id","txtEmailId",prop.getProperty("emailid"));
	  book.doClick("id", "spnVerifyEmail");
	  Thread.sleep(2000);
	 // book.doClick("id","dwnArrAdult0");
	 // Thread.sleep(2000);
	  book.selectDropDown("id","titleAdult0",prop.getProperty("title"));
	  book.clearData("id","txtFNAdult0");
	  book.sendData("id","txtFNAdult0", prop.getProperty("fname"));
	  book.clearData("id","txtLNAdult0");
	  book.sendData("id","txtLNAdult0", prop.getProperty("lname"));
	  book.clearData("id", "txtCPhone");
	 // book.doClick("xpath", "//label[@id='mycheckbox']//span[@class='cmark_cbox']");
	  book.doClick("id", "spnTransaction");
	  Thread.sleep(2000);
	  String error= driver.findElement(By.id("spanError")).getText();
	  Assert.assertEquals("Please enter a valid mobile number",error);

	  
  }
  @Test(enabled=false,description="enter the valid origin city")
  public void enterValidToLocation()throws Exception {
	  prop.load(new FileInputStream("oneway.property"));
	  OneWayTrip book=new OneWayTrip(driver);
	  book.getUrl(prop.getProperty("url"));
	  //book.doClick("xpath",prop.getProperty("twoway"));
	  book.clearData("xpath",prop.getProperty("fromCity"));
	  Thread.sleep(3000);
	  WebElement fp1= book.getElement("xpath",prop.getProperty("fromCity"));
	  fp1.sendKeys("nmnmn");
	  fp1.sendKeys(Keys.ARROW_DOWN);
	  Thread.sleep(2000);
	  fp1.sendKeys(Keys.ENTER);
	  book.clearData("xpath",prop.getProperty("toCity"));
	  WebElement fp=book.getElement("xpath",prop.getProperty("toCity"));
	  fp.sendKeys(prop.getProperty("place2"));
      Thread.sleep(2000);
      fp.sendKeys(Keys.ARROW_DOWN);
      Thread.sleep(2000);
      fp.sendKeys(Keys.ENTER);
      book.doClick("css",prop.getProperty("search"));
      Thread.sleep(2000);
	  Alert ac=driver.switchTo().alert();
	  String error=ac.getText();
	  ac.accept();
	  Assert.assertEquals("Enter valid origin city", error);
  }
  @Test(enabled=false,description="enter the valid destination city")
  public void enerValidFromLocation()throws Exception {
	  prop.load(new FileInputStream("oneway.property"));
	  OneWayTrip book=new OneWayTrip(driver);
	  book.getUrl(prop.getProperty("url"));
	  //book.doClick("xpath",prop.getProperty("twoway"));
	  book.clearData("xpath",prop.getProperty("fromCity"));
	  Thread.sleep(3000);
	  WebElement fp1= book.getElement("xpath",prop.getProperty("fromCity"));
	  fp1.sendKeys(prop.getProperty("place2"));
	  fp1.sendKeys(Keys.ARROW_DOWN);
	  Thread.sleep(2000);
	  fp1.sendKeys(Keys.ENTER);
	  book.clearData("xpath",prop.getProperty("toCity"));
	  WebElement fp=book.getElement("xpath",prop.getProperty("toCity"));
	  fp.sendKeys("ghij");
      Thread.sleep(2000);
      fp.sendKeys(Keys.ARROW_DOWN);
      Thread.sleep(2000);
      fp.sendKeys(Keys.ENTER);
      book.doClick("css",prop.getProperty("search"));
      Thread.sleep(2000);
	  Alert ac=driver.switchTo().alert();
	  String error=ac.getText();
	  ac.accept();
	  Assert.assertEquals("Enter valid destination city", error);
  }
}
